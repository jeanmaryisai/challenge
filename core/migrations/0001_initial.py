# Generated by Django 4.1 on 2023-08-30 15:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='cadeau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_disponible', models.IntegerField()),
                ('cadeau', models.TextField()),
                ('show', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Concurent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pointCum', models.DecimalField(decimal_places=2, default=0, max_digits=9000)),
                ('id_fake', models.CharField(default='2389A1', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Concurent_par_manche',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pointsCum', models.IntegerField(default=0)),
                ('concurent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.concurent')),
            ],
        ),
        migrations.CreateModel(
            name='Dedicace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emetteur', models.CharField(max_length=100)),
                ('recepteur', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('like_counter', models.IntegerField(default=0, editable=False)),
                ('show', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=50)),
                ('date', models.DateTimeField()),
                ('location', models.CharField(max_length=300)),
                ('is_concour', models.BooleanField(default=True)),
                ('isActive', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='fake_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=100, null=True)),
                ('default_name', models.CharField(default='Annonyme', max_length=2000)),
                ('concurent_fav', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.concurent')),
                ('dedicaces', models.ManyToManyField(to='core.dedicace')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Manche',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('isopen', models.BooleanField(default=True)),
                ('concurent', models.ManyToManyField(to='core.concurent_par_manche')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.event')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('prenom', models.CharField(max_length=50, unique=True)),
                ('age', models.IntegerField()),
                ('profile', models.ImageField(null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enoncee', models.TextField()),
                ('reponse', models.TextField()),
                ('number', models.IntegerField(unique=True)),
                ('repondu', models.BooleanField()),
                ('used', models.BooleanField(default=False)),
                ('time_answer', models.DateTimeField(blank=True, null=True)),
                ('is_unique', models.BooleanField(default=False)),
                ('is_repliques', models.BooleanField(default=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.event')),
                ('manche', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.manche')),
                ('receveur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personne_posee', to='core.concurent')),
                ('repliques', models.ManyToManyField(blank=True, related_name='persone_avoir_repondu', to='core.concurent')),
                ('repliques_rate', models.ManyToManyField(blank=True, to='core.concurent')),
            ],
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intervenant', models.CharField(max_length=100)),
                ('titre', models.CharField(max_length=50)),
                ('rank', models.IntegerField()),
                ('passe', models.BooleanField(default=False)),
                ('type', models.IntegerField(choices=[(1, 'Manche'), (2, 'Chant'), (3, 'Jeu'), (4, 'Slam'), (5, 'Danse'), (6, 'Piece de Theatre')])),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.event')),
            ],
        ),
        migrations.CreateModel(
            name='order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_redeem', models.BooleanField(default=False)),
                ('cadeau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cadeau')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.fake_user')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('level', models.CharField(choices=[('p', 'primary'), ('s', 'success'), ('i', 'info'), ('w', 'warning'), ('d', 'danger')], max_length=1)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.event')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.concurent')),
            ],
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pointsCum', models.FloatField()),
                ('manche', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('concurent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.concurent')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.question')),
            ],
        ),
        migrations.AddField(
            model_name='dedicace',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.event'),
        ),
        migrations.AddField(
            model_name='dedicace',
            name='replique_a',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.dedicace'),
        ),
        migrations.AddField(
            model_name='concurent',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.event'),
        ),
        migrations.AddField(
            model_name='concurent',
            name='members',
            field=models.ManyToManyField(to='core.member'),
        ),
        migrations.CreateModel(
            name='cadeau_quesion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.TextField()),
                ('reponse_true', models.TextField()),
                ('reponse_fake_1', models.TextField()),
                ('reponse_fake_2', models.TextField()),
                ('reponse_fake_3', models.TextField()),
                ('cadeau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qsts', to='core.cadeau')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.event')),
            ],
        ),
        migrations.AddField(
            model_name='cadeau',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.event'),
        ),
    ]
